@import '~src/variables.scss';

.checkbox {
    width: 100%;
    height: 100%;

    .checkbox-label {
        display: block;
        box-sizing: border-box;
        position: relative;
        width: 100%;
        height: 100%;
        border: 1.5px solid colors(complement, standard);
        border-radius: 1.5px;
        margin-right: .5em;
        cursor: pointer;
        transition: background-color .2s ease-in-out, border-color .2s ease-in-out;

        & .check-icon {
            height: 100%;
            width: 100%;
            position: absolute;
            top: 0;
            left: 0;
            stroke: white;
            stroke-dasharray: 130px, 130px;
            stroke-dashoffset: 130px;
            transition: stroke-dashoffset .3s ease-in-out;
        }
    }

    input[type=checkbox] ~ .checkbox-label {
        & > .checkbox-circle-radiate {
            position: absolute;
            display: block;
            height: 100%;
            width: 100%;
            border-radius: 100px;
            transition: all .2s ease;
            top: -1px;
            left: -1px;
            opacity: 0.2;
        }
    }

    input[type=checkbox]:hover ~ .checkbox-label, input[type=checkbox]:focus ~ .checkbox-label {
        & > .checkbox-circle-radiate {
            background-color: colors(complement, standard);
            height: calc((100% + 3px) * 2.5);
            width: calc((100% + 3px) * 2.5);
            left: calc(-1.5px - ((100% + 3px) * 0.75));
            top: calc(-1.5px - ((100% + 3px) * 0.75));
        }
    }

    input[type=checkbox]:checked ~ .checkbox-label {
        background-color: colors(complement, standard);
        border-color: colors(complement, standard);

        & .check-icon {
            stroke-dashoffset: 0;
        }
    }

    input[type=checkbox]:checked:hover ~ .checkbox-label, input[type=checkbox]:checked:focus ~ .checkbox-label {
        & > .checkbox-circle-radiate {
            background-color: colors(complement, standard);
        }
    }

    input[type=checkbox] {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }
}